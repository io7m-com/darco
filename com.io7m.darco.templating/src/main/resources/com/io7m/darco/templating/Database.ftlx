[#ftl output_format="plainText"]
${copyrightText}

package ${packageName};

import com.io7m.darco.api.DDatabaseAbstract;
import com.io7m.darco.api.DDatabaseException;
import com.io7m.jmulticlose.core.CloseableCollectionType;
import io.opentelemetry.api.trace.Span;

import javax.sql.DataSource;
import java.sql.Connection;
import java.util.Collection;
import java.util.Map;

/**
 * A database.
 */

final class ${database}
  extends DDatabaseAbstract<
  ${configurationType},
  ${connectionType},
  ${transactionType},
  ${queryProviderType}<?, ?, ?>>
  implements ${databaseType}
{
  ${database}(
    final ${configurationType} inConfiguration,
    final DataSource inDataSource,
    final Collection<${queryProviderType}<?, ?, ?>> queryProviders,
    final CloseableCollectionType<DDatabaseException> resources)
  {
    super(inConfiguration, inDataSource, queryProviders, resources);
  }

  @Override
  protected ${connectionType} createConnection(
    final Span span,
    final Connection connection,
    final Map<Class<?>, ${queryProviderType}<?, ?, ?>> queries)
  {
    return new ${connection}(this, span, connection, queries);
  }
}
