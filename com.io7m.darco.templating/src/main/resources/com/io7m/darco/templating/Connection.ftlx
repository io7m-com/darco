[#ftl output_format="plainText"]
${copyrightText}

package ${packageName};

import com.io7m.darco.api.DDatabaseConnectionAbstract;
import com.io7m.darco.api.DDatabaseTransactionCloseBehavior;

import io.opentelemetry.api.trace.Span;

import java.sql.Connection;
import java.util.Map;

/**
 * A database connection.
 */

final class ${connection}
  extends DDatabaseConnectionAbstract<
  ${configurationType},
  ${transactionType},
  ${queryProviderType}<?, ?, ?>>
  implements ${connectionType}
{
  ${connection}(
    final ${databaseType} database,
    final Span span,
    final Connection connection,
    final Map<Class<?>, ${queryProviderType}<?, ?, ?>> queries)
  {
    super(database.configuration(), span, connection, queries);
  }

  @Override
  protected ${transactionType} createTransaction(
    final DDatabaseTransactionCloseBehavior closeBehavior,
    final Span transactionSpan,
    final Map<Class<?>, ${queryProviderType}<?, ?, ?>> queries)
  {
    return new ${transaction}(
      closeBehavior,
      this.configuration(),
      this,
      transactionSpan,
      queries
    );
  }
}
